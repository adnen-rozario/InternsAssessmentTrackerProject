// <auto-generated />
using System;
using InternsAssessment.Entities.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InternsAssessmentTracker.Entities.Migrations
{
    [DbContext(typeof(IATrackerDbContext))]
    [Migration("20200410121606_updated_database")]
    partial class updated_database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InternsAssessment.Entities.Entities.InternRating", b =>
                {
                    b.Property<int>("InternRatingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("InternsId");

                    b.Property<int>("RatingMasterId");

                    b.Property<int>("TechnologiesId");

                    b.HasKey("InternRatingId");

                    b.HasIndex("InternsId");

                    b.HasIndex("RatingMasterId");

                    b.HasIndex("TechnologiesId");

                    b.ToTable("Intern_Rating");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Interns", b =>
                {
                    b.Property<int>("InternsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("EmailId");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNo");

                    b.HasKey("InternsId");

                    b.ToTable("Interns");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.ProjectInternRelation", b =>
                {
                    b.Property<int>("ProjectInternRelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InternsId");

                    b.Property<int>("ProjectsId");

                    b.HasKey("ProjectInternRelationId");

                    b.HasIndex("InternsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("ProjectInternRelation");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.ProjectTechnologiesRelation", b =>
                {
                    b.Property<int>("ProjectTechnologiesRelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectsId");

                    b.Property<int>("TechnologiesId");

                    b.HasKey("ProjectTechnologiesRelationId");

                    b.HasIndex("ProjectsId");

                    b.HasIndex("TechnologiesId");

                    b.ToTable("ProjectTechnologiesRelation");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Projects", b =>
                {
                    b.Property<int>("ProjectsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.HasKey("ProjectsId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.RatingMaster", b =>
                {
                    b.Property<int>("RatingMasterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Rate");

                    b.HasKey("RatingMasterId");

                    b.ToTable("RatingMaster");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Technologies", b =>
                {
                    b.Property<int>("TechnologiesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.HasKey("TechnologiesId");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.InternRating", b =>
                {
                    b.HasOne("InternsAssessment.Entities.Entities.Interns", "Interns")
                        .WithMany("InternRating")
                        .HasForeignKey("InternsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InternsAssessment.Entities.Entities.RatingMaster", "Rating")
                        .WithMany("InternRating")
                        .HasForeignKey("RatingMasterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InternsAssessment.Entities.Entities.Technologies", "Technologies")
                        .WithMany("Intern_Rating")
                        .HasForeignKey("TechnologiesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.ProjectInternRelation", b =>
                {
                    b.HasOne("InternsAssessment.Entities.Entities.Interns", "Interns")
                        .WithMany("ProjectInternRelation")
                        .HasForeignKey("InternsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InternsAssessment.Entities.Entities.Projects", "Projects")
                        .WithMany("ProjectInternRelation")
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.ProjectTechnologiesRelation", b =>
                {
                    b.HasOne("InternsAssessment.Entities.Entities.Projects", "Projects")
                        .WithMany("ProjectTechnologiesRelation")
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InternsAssessment.Entities.Entities.Technologies", "Technologies")
                        .WithMany("ProjectTechnologiesRelation")
                        .HasForeignKey("TechnologiesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using InternsAssessment.Entities.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InternsAssessmentTracker.Entities.Migrations
{
    [DbContext(typeof(IATrackerDbContext))]
    [Migration("20200409072447_created_database_and_tables")]
    partial class created_database_and_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Intern_Rating", b =>
                {
                    b.Property<int>("Intern_RatingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("InternsId");

                    b.Property<int>("Rating_MasterId");

                    b.Property<int>("TechnologiesId");

                    b.HasKey("Intern_RatingId");

                    b.HasIndex("InternsId");

                    b.HasIndex("Rating_MasterId");

                    b.HasIndex("TechnologiesId");

                    b.ToTable("Intern_Rating");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Interns", b =>
                {
                    b.Property<int>("InternsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("EmailId");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNo");

                    b.HasKey("InternsId");

                    b.ToTable("Interns");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Project_InternRelation", b =>
                {
                    b.Property<int>("Project_InternRelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InternsId");

                    b.Property<int>("ProjectsId");

                    b.HasKey("Project_InternRelationId");

                    b.HasIndex("InternsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("Project_InternRelation");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Project_TechnologiesRelation", b =>
                {
                    b.Property<int>("Project_TechnologiesRelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectsId");

                    b.Property<int>("TechnologiesId");

                    b.HasKey("Project_TechnologiesRelationId");

                    b.HasIndex("ProjectsId");

                    b.HasIndex("TechnologiesId");

                    b.ToTable("Project_TechnologiesRelation");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Projects", b =>
                {
                    b.Property<int>("ProjectsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.HasKey("ProjectsId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Rating_Master", b =>
                {
                    b.Property<int>("Rating_MasterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Rate");

                    b.HasKey("Rating_MasterId");

                    b.ToTable("Rating_Master");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Technologies", b =>
                {
                    b.Property<int>("TechnologiesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.HasKey("TechnologiesId");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Intern_Rating", b =>
                {
                    b.HasOne("InternsAssessment.Entities.Entities.Interns", "Interns")
                        .WithMany("Intern_Rating")
                        .HasForeignKey("InternsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InternsAssessment.Entities.Entities.Rating_Master", "Rating")
                        .WithMany("Intern_Rating")
                        .HasForeignKey("Rating_MasterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InternsAssessment.Entities.Entities.Technologies", "Technologies")
                        .WithMany("Intern_Rating")
                        .HasForeignKey("TechnologiesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Project_InternRelation", b =>
                {
                    b.HasOne("InternsAssessment.Entities.Entities.Interns", "Interns")
                        .WithMany("Project_InternRelation")
                        .HasForeignKey("InternsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InternsAssessment.Entities.Entities.Projects", "Projects")
                        .WithMany("Project_InternRelation")
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InternsAssessment.Entities.Entities.Project_TechnologiesRelation", b =>
                {
                    b.HasOne("InternsAssessment.Entities.Entities.Projects", "Projects")
                        .WithMany("Project_TechnologiesRelation")
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InternsAssessment.Entities.Entities.Technologies", "Technologies")
                        .WithMany("Project_TechnologiesRelation")
                        .HasForeignKey("TechnologiesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
